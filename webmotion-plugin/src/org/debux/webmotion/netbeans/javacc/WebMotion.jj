options {
    LOOKAHEAD = 2;
    BUILD_PARSER = true;
    STATIC = false;
    ERROR_REPORTING = true;
}

PARSER_BEGIN(WebMotionParser)
package org.debux.webmotion.netbeans.javacc;

import java.util.*;

public class WebMotionParser {

    public List<ParseException> syntaxErrors = new ArrayList<ParseException>();

    void recover(ParseException ex, int recoveryPoint) {
        syntaxErrors.add(ex);
        Token t;
        do {
            t = getNextToken();
        } while(t.kind != EOF && t.kind != recoveryPoint);
    }
}

PARSER_END(WebMotionParser)

TOKEN: {
    <SECTION_CONFIG: "[config]">
|   <SECTION_ACTIONS: "[actions]">
|   <SECTION_ERRORS: "[errors]">
|   <SECTION_FILTERS: "[filters]">
|   <SECTION_EXTENSIONS: "[extensions]">
|   <SECTION_PROPERTIES: "[" (<LETTER> | <DIGIT> | "_" | "$" | "-")+ ".properties]">

|   <CONFIG_NAME:
        "\n" (
            "package.views"
            | "package.base"
            | "package.filters"
            | "package.actions"
            | "package.errors"
            | "javac.debug"
            | "server.async"
            | "server.encoding"
            | "server.error.page"
            | "server.controller.scope"
            | "server.listener.class"
            | "server.main.handler.class"
            | "server.secret"
            | "server.static.autodetect"
        )
    >

|   <ACTION_JAVA: ("action:" | "sync:" | "async:")>
|   <ACTION_URL: ("redirect:" | "forward:" | "url:")>
|   <ACTION_VIEW: ("view:")>

|   <COMMENT: "#" (~["\n","\r"])* ("\n" | "\r" | "\r\n")?>

|   <METHODS_HTTP: "\n" <METHOD_HTTP> ("," <METHOD_HTTP>)*>
|   <METHOD_HTTP: ("*" | "GET" | "POST" | "PUT" | "DELETE" | "HEAD")>

|   <EQUALS: "=">
|   <NEW_LINE: ("\n" | "\r" | "\r\n")>
|   <WHITESPACE: " " | "\t" | "\f">
|   <DIGIT: ["0"-"9"]>
|   <LETTER:
        [
            "\u0024",
            "\u0041"-"\u005a",
            "\u005f",
            "\u0061"-"\u007a",
            "\u00c0"-"\u00d6",
            "\u00d8"-"\u00f6",
            "\u00f8"-"\u00ff",
            "\u0100"-"\u1fff",
            "\u3040"-"\u318f",
            "\u3300"-"\u337f",
            "\u3400"-"\u3d2d",
            "\u4e00"-"\u9fff",
            "\uf900"-"\ufaff"
        ]
    >
}

MORE : { < ~[] > }

void Mapping() : {}
{
    try {
        (Sections() | <COMMENT>)*
    } catch (ParseException ex) {
        recover(ex, NEW_LINE);
    }
}

void Sections() : {}
{
    <SECTION_CONFIG> (SectionConfigLine())* <NEW_LINE>
}

void SectionConfigLine() : {}
{
    <CONFIG_NAME> <EQUALS>
}
