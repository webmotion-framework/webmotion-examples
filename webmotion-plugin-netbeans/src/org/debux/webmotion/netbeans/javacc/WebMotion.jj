options {
    BUILD_PARSER = true;
    STATIC = false;
    ERROR_REPORTING = true;
}

PARSER_BEGIN(WebMotionParser)
package org.debux.webmotion.netbeans.javacc;

import java.util.*;

public class WebMotionParser {

    // Run the parser
    public static void main(String args[]) {
        WebMotionParser parser;

        try {
            parser = new WebMotionParser(new java.io.FileInputStream("test.wm"));
        } catch (java.io.FileNotFoundException e) {
            System.out.println("File not found.");
            return;
        }

        try {
            parser.Mapping();
            System.out.println("Parser: successfully.");
        } catch (ParseException e) {
            System.out.println("Parser: errors.");
            e.printStackTrace();
        }
    }
}

PARSER_END(WebMotionParser)

SKIP:
{
    <COMMENT: "#" (~["\n","\r"])* ("\n" | "\r" | "\r\n")*>
}
<SECTION_CONFIG> SKIP: {<COMMENT_IN_CONFIG: <COMMENT>>}
<SECTION_ACTIONS> SKIP: {<COMMENT_IN_ACTIONS: <COMMENT>>}
<SECTION_ERRORS> SKIP: {<COMMENT_IN_ERRORS: <COMMENT>>}
<SECTION_FILTERS> SKIP: {<COMMENT_IN_FILTERS: <COMMENT>>}
<SECTION_EXTENSIONS> SKIP: {<COMMENT_IN_EXTENSIONS: <COMMENT>>}
<SECTION_PROPERTIES> SKIP: {<COMMENT_IN_PROPERTIES: <COMMENT>>}

TOKEN: {
    <SECTION_CONFIG_NAME: "[config]" <NEW_LINE>> : SECTION_CONFIG
|   <SECTION_ACTIONS_NAME: "[actions]" <NEW_LINE>> : SECTION_ACTIONS
|   <SECTION_ERRORS_NAME: "[errors]" <NEW_LINE>> : SECTION_ERRORS
|   <SECTION_FILTERS_NAME: "[filters]" <NEW_LINE>> : SECTION_FILTERS
|   <SECTION_EXTENSIONS_NAME: "[extensions]" <NEW_LINE>> : SECTION_EXTENSIONS
|   <SECTION_PROPERTIES_NAME: "[" (<LETTER> | <DIGIT> | "_" | "$" | "-")+ ".properties]" <NEW_LINE>> : SECTION_PROPERTIES

|   <METHODS_HTTP: <METHOD_HTTP> ("," <METHOD_HTTP>)*>
|   <METHOD_HTTP: ("*" | "GET" | "POST" | "PUT" | "DELETE" | "HEAD")>

|   <ACTION_BASIC_JAVA: "action:">
|   <ACTION_JAVA: "action:" | "async:" | "sync:">
|   <ACTION_VIEW: "view:">
|   <ACTION_LINK: "forward:" | "redirect:" | "url:">

|   <IDENTIFIER: <LETTER> (<LETTER> | <DIGIT>)*>
|   <QUALIFIED_IDENTIFIER: <IDENTIFIER> ("." <IDENTIFIER>)*>

|   <NEW_LINE: ("\n" | "\r" | "\r\n")+>
|   <WHITESPACE: (" " | "\t" | "\f")+>
|   <DIGIT: ["0"-"9"]>
|   <LETTER: ["a"-"z", "A"-"Z"]>
}

<SECTION_CONFIG> TOKEN: {
    <SECTION_CONFIG_NEXT_CONFIG: <SECTION_CONFIG_NAME>> : SECTION_CONFIG
|   <SECTION_CONFIG_NEXT_ACTIONS: <SECTION_ACTIONS_NAME>> : SECTION_ACTIONS
|   <SECTION_CONFIG_NEXT_ERRORS: <SECTION_ERRORS_NAME>> : SECTION_ERRORS
|   <SECTION_CONFIG_NEXT_FILTERS: <SECTION_FILTERS_NAME>> : SECTION_FILTERS
|   <SECTION_CONFIG_NEXT_EXTENSIONS: <SECTION_EXTENSIONS_NAME>> : SECTION_EXTENSIONS
|   <SECTION_CONFIG_NEXT_PROPERTIES: <SECTION_PROPERTIES_NAME>> : SECTION_PROPERTIES

|   <CONFIG_KEY: "package.views"
                  | "package.base"
                  | "package.filters"
                  | "package.actions"
                  | "package.errors"
                  | "javac.debug"
                  | "server.async"
                  | "server.encoding"
                  | "server.error.page"
                  | "server.controller.scope"
                  | "server.listener.class"
                  | "server.main.handler.class"
                  | "server.secret"
                  | "server.static.autodetect">
|   <CONFIG_EQUALS: "="> : SECTION_CONFIG_VALUE
}

<SECTION_CONFIG_VALUE> TOKEN: {
    <CONFIG_VALUE: (~["\n"])+>
|   <CONFIG_END: <NEW_LINE>> : SECTION_CONFIG
}

<SECTION_ACTIONS> TOKEN: {
    <SECTION_ACTIONS_NEXT_CONFIG: <SECTION_CONFIG_NAME>> : SECTION_CONFIG
|   <SECTION_ACTIONS_NEXT_ACTIONS: <SECTION_ACTIONS_NAME>> : SECTION_ACTIONS
|   <SECTION_ACTIONS_NEXT_ERRORS: <SECTION_ERRORS_NAME>> : SECTION_ERRORS
|   <SECTION_ACTIONS_NEXT_FILTERS: <SECTION_FILTERS_NAME>> : SECTION_FILTERS
|   <SECTION_ACTIONS_NEXT_EXTENSIONS: <SECTION_EXTENSIONS_NAME>> : SECTION_EXTENSIONS
|   <SECTION_ACTIONS_NEXT_PROPERTIES: <SECTION_PROPERTIES_NAME>> : SECTION_PROPERTIES

|   <ACTION_METHOD: <METHODS_HTTP>>
|   <ACTION_END: <NEW_LINE>>
}

<SECTION_ERRORS> TOKEN: {
    <SECTION_ERRORS_NEXT_CONFIG: <SECTION_CONFIG_NAME>> : SECTION_CONFIG
|   <SECTION_ERRORS_NEXT_ACTIONS: <SECTION_ACTIONS_NAME>> : SECTION_ACTIONS
|   <SECTION_ERRORS_NEXT_ERRORS: <SECTION_ERRORS_NAME>> : SECTION_ERRORS
|   <SECTION_ERRORS_NEXT_FILTERS: <SECTION_FILTERS_NAME>> : SECTION_FILTERS
|   <SECTION_ERRORS_NEXT_EXTENSIONS: <SECTION_EXTENSIONS_NAME>> : SECTION_EXTENSIONS
|   <SECTION_ERRORS_NEXT_PROPERTIES: <SECTION_PROPERTIES_NAME>> : SECTION_PROPERTIES

|   <CODE: "code:" <DIGIT><DIGIT><DIGIT>>
|   <ALL: "*">
|   <EXCEPTION: <QUALIFIED_IDENTIFIER>>
|   <ERROR_SEPARATOR: <WHITESPACE>> : SECTION_ERRORS_ACTIONS
}

<SECTION_ERRORS_ACTIONS> TOKEN: {
    <ERROR_ACTION_JAVA: (<ACTION_BASIC_JAVA>)? <QUALIFIED_IDENTIFIER>>
|   <ERROR_ACTION_VIEW: <ACTION_VIEW> (~["\n"])+>
|   <ERROR_ACTION_LINK: <ACTION_LINK> (~["\n"])+>
|   <ERROR_END: <NEW_LINE>> : SECTION_ERRORS
}

<SECTION_FILTERS> TOKEN: {
    <SECTION_FILTERS_NEXT_CONFIG: <SECTION_CONFIG_NAME>> : SECTION_CONFIG
|   <SECTION_FILTERS_NEXT_ACTIONS: <SECTION_ACTIONS_NAME>> : SECTION_ACTIONS
|   <SECTION_FILTERS_NEXT_ERRORS: <SECTION_ERRORS_NAME>> : SECTION_ERRORS
|   <SECTION_FILTERS_NEXT_FILTERS: <SECTION_FILTERS_NAME>> : SECTION_FILTERS
|   <SECTION_FILTERS_NEXT_EXTENSIONS: <SECTION_EXTENSIONS_NAME>> : SECTION_EXTENSIONS
|   <SECTION_FILTERS_NEXT_PROPERTIES: <SECTION_PROPERTIES_NAME>> : SECTION_PROPERTIES

|   <FILTER_METHOD: <METHODS_HTTP>>
|   <FILTER_PATH: ("/*" | ("/" (<LETTER> | <DIGIT> | "_" | "$" | "-" | ".")*))+>
|   <FILTER_SEPARATOR: <WHITESPACE>>
|   <FILTER_ACTION: (<ACTION_BASIC_JAVA>)? <QUALIFIED_IDENTIFIER>> : SECTION_FILTERS_PARAMETERS
}

<SECTION_FILTERS_PARAMETERS> TOKEN: {
    <FILTER_PARAMETER_SEPARATOR: ",">
|   <FILTER_PARAMETER_NAME: (<LETTER> | <DIGIT> | "_" | "$" | "-" | ".")+>
|   <FILTER_PARAMETER_EQUALS: "="> : SECTION_FILTERS_PARAMETER_VALUE
|   <FILTER_PARAMETERS_SEPARATOR: <WHITESPACE>>
|   <FILTER_END: <NEW_LINE>> : SECTION_FILTERS
}

<SECTION_FILTERS_PARAMETER_VALUE> TOKEN: {
    <FILTER_PARAMETER_VALUE: (<LETTER> | <DIGIT> | "_" | "$" | "-" | "." | "%" | "/")+> : SECTION_FILTERS_PARAMETERS
}

<SECTION_EXTENSIONS> TOKEN: {
    <SECTION_EXTENSIONS_NEXT_CONFIG: <SECTION_CONFIG_NAME>> : SECTION_CONFIG
|   <SECTION_EXTENSIONS_NEXT_ACTIONS: <SECTION_ACTIONS_NAME>> : SECTION_ACTIONS
|   <SECTION_EXTENSIONS_NEXT_ERRORS: <SECTION_ERRORS_NAME>> : SECTION_ERRORS
|   <SECTION_EXTENSIONS_NEXT_FILTERS: <SECTION_FILTERS_NAME>> : SECTION_FILTERS
|   <SECTION_EXTENSIONS_NEXT_EXTENSIONS: <SECTION_EXTENSIONS_NAME>> : SECTION_EXTENSIONS
|   <SECTION_EXTENSIONS_NEXT_PROPERTIES: <SECTION_PROPERTIES_NAME>> : SECTION_PROPERTIES

|   <MOUNT_PATH: ("/" (<LETTER> | <DIGIT> | "_" | "$" | "-" | ".")*)+ >
|   <EXTENSION_SEPARATOR: <WHITESPACE>> : SECTION_EXTENSIONS_FILE
}

<SECTION_EXTENSIONS_FILE> TOKEN: {
    <EXTENSION_FILE: (~["\n"])+>
|   <EXTENSION_END: <NEW_LINE>> : SECTION_EXTENSIONS
}

<SECTION_PROPERTIES> TOKEN: {
    <SECTION_PROPERTIES_NEXT_CONFIG: <SECTION_CONFIG_NAME>> : SECTION_CONFIG
|   <SECTION_PROPERTIES_NEXT_ACTIONS: <SECTION_ACTIONS_NAME>> : SECTION_ACTIONS
|   <SECTION_PROPERTIES_NEXT_ERRORS: <SECTION_ERRORS_NAME>> : SECTION_ERRORS
|   <SECTION_PROPERTIES_NEXT_FILTERS: <SECTION_FILTERS_NAME>> : SECTION_FILTERS
|   <SECTION_PROPERTIES_NEXT_EXTENSIONS: <SECTION_EXTENSIONS_NAME>> : SECTION_EXTENSIONS
|   <SECTION_PROPERTIES_NEXT_PROPERTIES: <SECTION_PROPERTIES_NAME>> : SECTION_PROPERTIES

|   <PROPERTIE_NAME: ((~["\n", "="]) | "\\=")+>
|   <PROPERTIE_EQUALS: "="> : SECTION_PROPERTIES_VALUE
}

<SECTION_PROPERTIES_VALUE> TOKEN: {
    <PROPERTIE_VALUE: (~["\n"])+>
|   <PROPERTIE_END: <NEW_LINE>> : SECTION_PROPERTIES
}

void Mapping() : {}
{
    (
        SectionConfig() 
      | SectionActions() 
      | SectionErrors() 
      | SectionFilters()
      | SectionExtensions()
      | SectionProperties()
    )* <EOF>
}

void SectionConfig() : {}
{
    SectionConfigName() (SectionConfigLine())*
}

void SectionConfigName() : {}
{
    (
          <SECTION_CONFIG_NAME>
        | <SECTION_CONFIG_NEXT_CONFIG>
        | <SECTION_ACTIONS_NEXT_CONFIG>
        | <SECTION_ERRORS_NEXT_CONFIG>
        | <SECTION_FILTERS_NEXT_CONFIG>
        | <SECTION_EXTENSIONS_NEXT_CONFIG>
        | <SECTION_PROPERTIES_NEXT_CONFIG>
    )
}

void SectionConfigLine() : {}
{
    <CONFIG_KEY> <CONFIG_EQUALS> (<CONFIG_VALUE>)? <CONFIG_END>
}

void SectionActions() : {}
{
    SectionActionsName() (SectionActionsLine())*
}

void SectionActionsName() : {}
{
    (
          <SECTION_ACTIONS_NAME>
        | <SECTION_CONFIG_NEXT_ACTIONS>
        | <SECTION_ACTIONS_NEXT_ACTIONS>
        | <SECTION_ERRORS_NEXT_ACTIONS>
        | <SECTION_FILTERS_NEXT_ACTIONS>
        | <SECTION_EXTENSIONS_NEXT_ACTIONS>
        | <SECTION_PROPERTIES_NEXT_ACTIONS>
    )
}

void SectionActionsLine() : {}
{
    <ACTION_METHOD> <ACTION_END>
}

void SectionErrors() : {}
{
    SectionErrorsName() (SectionErrorsLine())*
}

void SectionErrorsName() : {}
{
    (
          <SECTION_ERRORS_NAME>
        | <SECTION_CONFIG_NEXT_ERRORS>
        | <SECTION_ACTIONS_NEXT_ERRORS>
        | <SECTION_ERRORS_NEXT_ERRORS>
        | <SECTION_FILTERS_NEXT_ERRORS>
        | <SECTION_EXTENSIONS_NEXT_ERRORS>
        | <SECTION_PROPERTIES_NEXT_ERRORS>
    )
}

void SectionErrorsLine() : {}
{
    (<ALL> | <CODE> | <EXCEPTION>) 
    <ERROR_SEPARATOR>
    (<ERROR_ACTION_JAVA> | <ERROR_ACTION_VIEW> | <ERROR_ACTION_LINK>)
    <ERROR_END>
}

void SectionFilters() : {}
{
    SectionFiltersName() (SectionFiltersLine())*
}

void SectionFiltersName() : {}
{
    (
          <SECTION_FILTERS_NAME>
        | <SECTION_CONFIG_NEXT_FILTERS>
        | <SECTION_ACTIONS_NEXT_FILTERS>
        | <SECTION_ERRORS_NEXT_FILTERS>
        | <SECTION_FILTERS_NEXT_FILTERS>
        | <SECTION_EXTENSIONS_NEXT_FILTERS>
        | <SECTION_PROPERTIES_NEXT_FILTERS>
    )
}

void SectionFiltersLine() : {}
{
    <FILTER_METHOD>
    <FILTER_SEPARATOR> <FILTER_PATH> 
    <FILTER_SEPARATOR> <FILTER_ACTION>
    (
        <FILTER_PARAMETERS_SEPARATOR>
        SectionFiltersParameter() (<FILTER_PARAMETER_SEPARATOR> SectionFiltersParameter())*
    )?
    <FILTER_END>
}

void SectionFiltersParameter() : {}
{
    <FILTER_PARAMETER_NAME> <FILTER_PARAMETER_EQUALS> (<FILTER_PARAMETER_VALUE>)?
}

void SectionExtensions() : {}
{
    SectionExtensionsName() (SectionExtensionsLine())*
}

void SectionExtensionsName() : {}
{
    (
          <SECTION_EXTENSIONS_NAME>
        | <SECTION_CONFIG_NEXT_EXTENSIONS>
        | <SECTION_ACTIONS_NEXT_EXTENSIONS>
        | <SECTION_ERRORS_NEXT_EXTENSIONS>
        | <SECTION_FILTERS_NEXT_EXTENSIONS>
        | <SECTION_EXTENSIONS_NEXT_EXTENSIONS>
        | <SECTION_PROPERTIES_NEXT_EXTENSIONS>
    )
}

void SectionExtensionsLine() : {}
{
    <MOUNT_PATH> <EXTENSION_SEPARATOR> <EXTENSION_FILE> <EXTENSION_END>
}

void SectionProperties() : {}
{
    SectionPropertiesName() (SectionPropertiesLine())*
}

void SectionPropertiesName() : {}
{
    (
          <SECTION_PROPERTIES_NAME>
        | <SECTION_CONFIG_NEXT_PROPERTIES>
        | <SECTION_ACTIONS_NEXT_PROPERTIES>
        | <SECTION_ERRORS_NEXT_PROPERTIES>
        | <SECTION_FILTERS_NEXT_PROPERTIES>
        | <SECTION_EXTENSIONS_NEXT_PROPERTIES>
        | <SECTION_PROPERTIES_NEXT_PROPERTIES>
    )
}

void SectionPropertiesLine() : {}
{
    <PROPERTIE_NAME> <PROPERTIE_EQUALS> (<PROPERTIE_VALUE>)? <PROPERTIE_END>
}
